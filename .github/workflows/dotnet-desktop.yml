Run mkdir -p brakesdev/SES
  mkdir -p brakesdev/SES
  az login --service-principal -u $env:CLIENT_ID -p $env:CLIENT_SECRET --tenant $env:TENANT_ID
  az storage blob download-batch -s $env:DEPLOYMENT_PATH -d brakesdev/SES --pattern "*" --account-name brakesdev
  shell: C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.EXE -command ". '{0}'"
  env:
    DEPLOYMENT_PATH: 


    Directory: D:\actions-runner\_work\brakes-test\brakes-test\brakesdev


Mode                 LastWriteTime         Length Name                                                                 
----                 -------------         ------ ----                                                                 
d-----          3/5/2024  12:49 PM                SES                                                                  
ERROR: argument --username/-u: expected one argument

Examples from AI knowledge base:
az login --service-principal -u http://azure-cli-2016-08-05-14-31-15 -p VerySecret --tenant contoso.onmicrosoft.com
Log in with a service principal using client secret. Use -p=secret if the first character of the password is '-'.

az login --service-principal -u http://azure-cli-2016-08-05-14-31-15 -p ~/mycertfile.pem --tenant contoso.onmicrosoft.com
Log in with a service principal using client certificate.

az login -u johndoe@contoso.com -p VerySecret
Log in with user name and password. This doesn't work with Microsoft accounts or accounts that have two-factor authentication enabled. Use -p=secret if the first character of the password is '-'.

https://aka.ms/cli_ref
Read more about the command in reference docs
ERROR: argument --source/-s: expected one argument

Examples from AI knowledge base:
az storage blob download-batch --destination . --pattern *.py --source mycontainer --account-name mystorageaccount --account-key 00000000
Download all blobs that end with .py

az storage blob download-batch --destination . --source mycontainer --pattern cli-201[89]-??-??.txt
Download all blobs with the format 'cli-2018-xx-xx.txt' or 'cli-2019-xx-xx.txt' in container to current path.

https://docs.microsoft.com/en-US/cli/azure/storage/blob#az_storage_blob_download_batch
Read more about the command in reference docs


Error: Process completed with exit code 1.

above arror occured while running the below github actions workflow

name: Build and Deploy .NET Framework 4.6.1 Application

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted
    env:
      CLIENT_ID: ${{ secrets.SP_CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.SP_CLIENT_SECRET }}
      TENANT_ID: ${{ secrets.SP_TENANT_ID }}
      SUBSCRIPTION_ID: ${{ secrets.SP_SUBSCRIPTION_ID }}
      ACTIONS_AZURE_REST_IGNORE_SSL_ERRORS: true  # Ignore SSL certificate errors

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.3

      - name: Restore NuGet Packages
        run: nuget restore SES.sln

      - name: Build
        run: msbuild /p:Configuration=Release /p:DeployOnBuild=true /p:PublishDir=SESWeb\bin\app.publish /v:diag

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: SESWeb\bin\app.publish
          if-no-files-found: warn

      - name: Verify Build Output
        shell: cmd
        run: dir "SESWeb\bin\app.publish"

      - name: Deploy to Azure App Service
        id: azure-deploy
        uses: Azure/webapps-deploy@v2
        with:
          publish-profile: ${{ secrets.PUBLISH_PROFILE }}
          package: SESWeb\bin\app.publish
        env:
          MSBUILD_PATH: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin\MSBuild.exe'
          CLIENT_ID: ${{ secrets.SP_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.SP_CLIENT_SECRET }}
          TENANT_ID: ${{ secrets.SP_TENANT_ID }}
          SUBSCRIPTION_ID: ${{ secrets.SP_SUBSCRIPTION_ID }}
          ACTIONS_AZURE_REST_IGNORE_SSL_ERRORS: true  # Ignore SSL certificate errors

  copy-and-deploy:
    runs-on: self-hosted
    needs: build-and-deploy
    steps:
      - name: Get Azure Deployment Path
        shell: powershell
        run: |
          $DEPLOYMENT_PATH = Select-String -Pattern '(?<=destinationAppUrl=")[^"]*' -InputObject "${{ steps.azure-deploy.outputs.publish-profile }}" | ForEach-Object { $_.Matches[0].Value }
          echo "DEPLOYMENT_PATH=$DEPLOYMENT_PATH" >> $env:GITHUB_ENV
      - name: Copy Files from Azure Deployment
        run: |
          mkdir -p brakesdev/SES
          az login --service-principal -u $env:CLIENT_ID -p $env:CLIENT_SECRET --tenant $env:TENANT_ID
          az storage blob download-batch -s $env:DEPLOYMENT_PATH -d brakesdev/SES --pattern "*" --account-name brakesdev
      - name: Deploy to Azure App Service - SES Folder
        uses: Azure/webapps-deploy@v2
        with:
          publish-profile: ${{ secrets.PUBLISH_PROFILE }}
          package: brakesdev/SES
        env:
          MSBUILD_PATH: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin\MSBuild.exe'
          CLIENT_ID: ${{ secrets.SP_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.SP_CLIENT_SECRET }}
          TENANT_ID: ${{ secrets.SP_TENANT_ID }}
          SUBSCRIPTION_ID: ${{ secrets.SP_SUBSCRIPTION_ID }}
          ACTIONS_AZURE_REST_IGNORE_SSL_ERRORS: true  # Ignore SSL certificate errors
